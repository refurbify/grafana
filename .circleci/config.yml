version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.15.5
      - image: circleci/postgres:12.4
        environment:
          POSTGRES_USER: grafanatest
          POSTGRES_DB: grafanatest

    parallelism: 2

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run unit tests
          environment:
            GRAFANA_TEST_DB: postgres

          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

      - run: make

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

#      - run:
#          name: Start service
#          environment:
#            CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
#            CONTACTS_DB_MIGRATIONS: /home/circleci/project/db/migrations
#          command: ./workdir/contacts
#          background: true
#
#      - run:
#          name: Validate service is working
#          command: |
#            sleep 5
#            curl --retry 10 --retry-delay 1 -X POST --header "Content-Type: application/json" -d '{"email":"test@example.com","name":"Test User"}' http://localhost:8080/contacts

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
workflows:
  version: 2
  build-workflow:
    jobs:
      - build
